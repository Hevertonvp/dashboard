{"version":3,"sources":["App.Styles.jsx","components/Sidebar/SidebarStyles.jsx","components/Sidebar/Sidebar.jsx","components/MainView/MainViewStyles.jsx","components/MainView/Home/Home.jsx","components/MainView/Produtos/Produtos.jsx","components/MainView/Clientes/Clientes.jsx","components/MainView/Servicos/Servicos.jsx","components/MainView/Clientes/Country/Country.Styles.jsx","components/MainView/Clientes/Country/Country.jsx","routes.js","components/MainView/ColorPicker/ColorPickerStyle.jsx","components/MainView/ColorPicker/ColorPicker.jsx","components/MainView/MainView.jsx","colors.js","App.js","reportWebVitals.js","index.js"],"names":["App","styled","div","h1","SidebarContainer","props","isSidebarOpen","colorPalette","bgColor1","bgColor2","backgroundImage","fontColorSelected","SidebarHeader","h4","font","MenuItemContainer","ItemContainer","MenuItem","selected","selectedBackgroundCollapsedMode","fontColor","dividerColor","Text","p","Icon","span","SubMenuItemContainer","SubMenuItem","DropdownIcon","isOpen","TogglerContainer","Toggler","Sidebar","sidebarHeader","fullName","shortName","menuItems","fonts","header","menu","useState","name","setSelected","setSidebarState","setHeader","subMenusStates","setSubMenus","useEffect","newSubMenus","forEach","item","index","subMenuItems","length","setTimeout","updateWindowWidth","window","innerWidth","addEventListener","removeEventListener","menuItemsJSX","map","isItemSelected","hasSubmenus","subMenuItemsJSX","subMenuItem","subMenuItemIndex","isSubMenuItemSelected","console","log","to","style","textDecoration","onClick","menuItemIdx","subMenuIdx","newMenusCopy","JSON","parse","stringify","handleSubMenuItemClick","subMenusCopy","hasOwnProperty","handleMenuItemClick","icon","AnimatePresence","motion","nav","initial","opacity","y","animate","x","transition","duration","exit","MainViewContainer","Home","Produtos","Clientes","Servicos","CountryContainer","CountryImage","img","CountryDescription","Country","country","match","params","countries","vendas","description","inventario","tony","ramos","moldova","kenya","Routes","exact","path","component","ColorPickerContainer","ColorBall","ColorPicker","MainView","silver","Palette","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8be5362.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\n\r\nexport const App = styled.div`\r\nbackground: #ecf0f1;\r\nheight: 100vh;\r\ndisplay: flex;\r\n`\r\nexport const Header = styled.h1`\r\ncolor: pink;\r\n`\r\n\r\n\r\n\r\n","import styled from '@emotion/styled'\r\n\r\n\r\nexport const SidebarContainer = styled.div`\r\nwidth: ${props => props.isSidebarOpen ? '100%' : '5%'};\r\nmax-width: 280px;\r\nmin-width: 80px;\r\nbackground-image: linear-gradient(\r\n    315deg,\r\n    ${props => props.colorPalette.bgColor1} 0%,\r\n    ${props => props.colorPalette.bgColor2} 74%),\r\n    url(${props => props.backgroundImage});\r\n)\r\nbackgorund-size: cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position: center center;\r\ncolor: ${props => props.colorPalette.fontColorSelected};\r\nposition: relative;\r\ntransition: .2s ease-in all\r\n`\r\n\r\nexport const SidebarHeader = styled.h4`\r\npadding: 20px 10px;\r\ntext-align: center;\r\nmargin-bottom: 10px;\r\nletter-spacing: 4px;\r\nfont-family: ${props => props.font};\r\n`\r\n//menu items\r\nexport const MenuItemContainer = styled.div``\r\nexport const ItemContainer = styled.div``\r\n\r\n\r\n\r\nexport const MenuItem = styled.div`\r\n${props => !props.isSidebarOpen ? `\r\ntext-align: center`: ``};\r\n${props => !props.isSidebarOpen && `\r\n${props.selected && `background-color: ${props.colorPalette.selectedBackgroundCollapsedMode === 'dark' ? 'rgba(0,0,0,0.6)' : 'rgba(255,255,255,0.6)'}; transition: .3s ease-in all`}\r\n`};\r\nposition: relative;     // por causa do dropdown icon\r\npadding: 10px 30px;\r\nfont-weight: 600;\r\ncolor: ${props => props.selected ? props.colorPalette.fontColorSelected : props.colorPalette.fontColor};\r\nfont-family: ${props => props.font};\r\nwhite-space: nowrap;\r\n&: hover{\r\n    color: ${props => props.colorPalette.fontColorSelected};\r\n    transition: .1s erase-in all; \r\n}\r\n&: after{\r\n    content: '';\r\n    border: thin solid ${props => props.selected ? props.colorPalette.fontColorSelected : props.colorPalette.dividerColor};\r\n    display: block;\r\n    margin: 8px 0 4px\r\n}\r\n\r\n${props => !props.selected && `\r\n&:hover{\r\n    &:after{\r\n        border: 1px solid rgba(255, 255, 255, 0.2);\r\n        transition: .1s erase-in all; \r\n    }\r\n}\r\n`}\r\n\r\n`;\r\n\r\nexport const Text = styled.p`\r\ndisplay: ${props => props.isSidebarOpen ? 'inline' : 'none'}\r\n`\r\nexport const Icon = styled.span`\r\n${props => props.isSidebarOpen ? 'margin-right: 15px; transition: .2s ease-in all' : ''};\r\ncolor: white;\r\n`;\r\n\r\n//sub-menu items\r\n\r\nexport const SubMenuItemContainer = styled.div`\r\nfont-size: 14px;\r\npadding-top:18px;\r\n${props => props.isSidebarOpen && `padding-left: 15%;`};\r\n${props => !props.isSidebarOpen && `text-align: center;`};\r\n`\r\nexport const SubMenuItem = styled.p`\r\ncolor: ${props => props.selected ? props.colorPalette.fontColorSelected : props.colorPalette.fontColor};\r\n&: hover{\r\ncolor: ${props=> props.colorPalette.fontColorSelected} ;\r\n}\r\nfont-weight: bold;\r\n`\r\n\r\n//dropdown icon:--------------------------------------\r\n\r\n\r\nexport const DropdownIcon = styled.span`\r\nposition: absolute;\r\ntop: ${props => props.isOpen ? '16px' : '12px'};\r\nborder: solid ${props => props.selected ? props.colorPalette.fontColorSelected : props.colorPalette.fontColor};\r\nborder-width: 0 1px 1px 0;\r\npadding: 3px;\r\ntransform: ${props => props.isOpen ? 'rotate(-135deg); transition: .2s ease-in all' : 'rotate(45deg); transition: .2s ease-in all'};\r\nright: 24px;\r\n\r\n`;\r\n\r\n////toggler:\r\n\r\nexport const TogglerContainer = styled.div`\r\nposition: absolute;\r\nwidth: 30%;\r\nbottom: 10%;\r\nleft: 0;\r\nright: 0;\r\nmargin: 0 auto;\r\n`\r\nexport const Toggler = styled.div`\r\nmargin-top: 40px;\r\nheight: 40px;\r\ncursor: pointer;\r\nposition: relative;  \r\n\r\n&:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: .25em;\r\n    width: 100%;\r\n    height: .1em;\r\n    background: #fff;\r\n    box-shadow: 0 .75em 0 0 #fff, 0 1.5em 0 0 #fff;\r\n    }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport * as s from './SidebarStyles'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = props => {\r\n    const {\r\n        backgroundImage = '',\r\n        sidebarHeader = {\r\n            fullName: '',\r\n            shortName: '',\r\n        },\r\n        menuItems = [],\r\n        fonts = {\r\n            header: '',\r\n            menu: ''\r\n        },\r\n        colorPalette = {\r\n            bgColor1: 'rgba(252, 82, 150, 0.8)',\r\n            bgColor2: 'rgba(246, 112, 98, 0.8)',\r\n            fontColor: 'rgba(19, 15, 64)',\r\n            fontColorSelected: 'rgba(255, 255, 255)',\r\n            dividerColor: 'rgba(225, 112, 85)',\r\n            selectedBackgroundCollapsedMode: 'dark'\r\n        }\r\n\r\n    } = props;\r\n\r\n    const [selected, setSelected] = useState(menuItems[0].name)\r\n    const [isSidebarOpen, setSidebarState] = useState(true)\r\n    const [header, setHeader] = useState(sidebarHeader.fullName)\r\n    const [subMenusStates, setSubMenus] = useState({})\r\n\r\n\r\n\r\n    //Effect - primeira utilização!\r\n\r\n    //para adicionar index de items que contém sub-menus\r\n\r\n    useEffect(() => {\r\n        const newSubMenus = {};\r\n        menuItems.forEach((item, index) => {\r\n            const hasSubmenus = !!item.subMenuItems.length;\r\n            if (hasSubmenus) {\r\n                newSubMenus[index] = {};\r\n                newSubMenus[index]['isOpen'] = false;\r\n                newSubMenus[index]['selected'] = null\r\n            }\r\n        })\r\n        setSubMenus(newSubMenus)\r\n    }, [menuItems])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        isSidebarOpen ? setTimeout(() => setHeader(sidebarHeader.fullName), 220) : setHeader(sidebarHeader.shortName)\r\n    }, [isSidebarOpen, sidebarHeader])\r\n\r\n    useEffect(() => {\r\n        const updateWindowWidth = () => {\r\n            if (window.innerWidth < 1000) {\r\n                setSidebarState(false)\r\n            }\r\n            else setSidebarState(true)\r\n        }\r\n        window.addEventListener('resize', updateWindowWidth);\r\n        return () => window.removeEventListener('resize', updateWindowWidth)     //limpa a memória, evita que o EL permaneça ativo\r\n    }, [isSidebarOpen]);\r\n\r\n\r\n    const handleMenuItemClick = (name, index) => {\r\n        setSelected(name)\r\n        const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates))   // Pq não copiar o objeto de forma direta? \r\n        if (subMenusStates.hasOwnProperty(index)) {\r\n            subMenusCopy[index]['isOpen'] = !subMenusStates[index]['isOpen']\r\n            setSubMenus(subMenusCopy)\r\n        }\r\n        else {\r\n            for (let item in subMenusStates) {\r\n                subMenusCopy[item]['isOpen'] = false\r\n                subMenusCopy[item]['seleted'] = null\r\n            }\r\n            setSubMenus(subMenusCopy)\r\n        }\r\n    }\r\n\r\n\r\n    const menuItemsJSX = menuItems.map((item, index) => {\r\n        const isItemSelected = selected === item.name;\r\n        const hasSubmenus = !!item.subMenuItems.length; // maior que zero: true\r\n\r\n        const isOpen = subMenusStates[index] ? subMenusStates[index].isOpen : null\r\n\r\n        const handleSubMenuItemClick = (menuItemIdx, subMenuIdx) => {\r\n            const newMenusCopy = JSON.parse(JSON.stringify(subMenusStates))\r\n            newMenusCopy[menuItemIdx]['selected'] = subMenuIdx;\r\n            setSubMenus(newMenusCopy);\r\n\r\n        }\r\n\r\n        const subMenuItemsJSX = item.subMenuItems.map((subMenuItem, subMenuItemIndex) => {\r\n            const isSubMenuItemSelected = subMenusStates[index]?.selected === subMenuItemIndex\r\n            console.log(isSubMenuItemSelected)\r\n            return (\r\n                <Link to={`${item.to}${subMenuItem.to}`} key={subMenuItemIndex} style={{ textDecoration: 'none' }}>\r\n                    <s.SubMenuItem\r\n                        onClick={() => handleSubMenuItemClick(index, subMenuItemIndex)}\r\n                        selected={isSubMenuItemSelected}\r\n                        colorPalette={colorPalette}\r\n                    >\r\n                        {subMenuItem.name}\r\n                    </s.SubMenuItem>\r\n                </Link>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <s.ItemContainer key={index}>\r\n                <Link to={item.to} style={{ textDecoration: 'none' }}>\r\n                    <s.MenuItem\r\n                        fonts={fonts.menu}\r\n                        selected={isItemSelected}\r\n                        onClick={() => handleMenuItemClick(item.name, index)}\r\n                        isSidebarOpen={isSidebarOpen}\r\n                        colorPalette={colorPalette}\r\n                    >\r\n                        <s.Icon isSidebarOpen={isSidebarOpen}>{item.icon}</s.Icon>\r\n                        <s.Text isSidebarOpen={isSidebarOpen}>{item.name}</s.Text>   {/*tag p com uma string*/}\r\n                        {hasSubmenus && isSidebarOpen && (\r\n                            <s.DropdownIcon selected={isItemSelected}\r\n                                isOpen={isOpen}\r\n                                colorPalette={colorPalette}\r\n                            />\r\n                        )}\r\n                    </s.MenuItem>\r\n                </Link>\r\n                {/*mostrar itens apenas se existirem*/}\r\n                <AnimatePresence>\r\n                    {hasSubmenus && isOpen && (\r\n                        <motion.nav\r\n                            initial={{ opacity: 0, y: -15 }}\r\n                            animate={{ opacity: 1, x: 0 }}\r\n                            transition={{ duration: 0.35 }}\r\n                            exit={{ opacity: 0, x: -30 }}\r\n                        >\r\n                            <s.SubMenuItemContainer isSidebarOpen={isSidebarOpen} colorPalette={colorPalette}>{subMenuItemsJSX}</s.SubMenuItemContainer>\r\n                        </motion.nav>\r\n                    )}\r\n                </AnimatePresence>\r\n            </s.ItemContainer>\r\n        )\r\n    })\r\n    return (\r\n        <s.SidebarContainer backgroundImage={backgroundImage} isSidebarOpen={isSidebarOpen} colorPalette = {colorPalette}>\r\n            <s.SidebarHeader font={fonts.header}>{header}</s.SidebarHeader>\r\n            <s.MenuItemContainer>{menuItemsJSX}</s.MenuItemContainer>\r\n            <s.TogglerContainer onClick={() => setSidebarState(!isSidebarOpen)} >\r\n                <s.Toggler />\r\n            </s.TogglerContainer >\r\n        </s.SidebarContainer>\r\n\r\n\r\n    )\r\n}\r\nexport default Sidebar","import styled from '@emotion/styled'\r\n\r\n\r\nexport const MainViewContainer = styled.div`\r\nwidth: 80%;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return <h1>hihihihihihi</h1>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Produtos = () => {\r\n    return <h1>hihihihihihi</h1>\r\n    \r\n}\r\n\r\nexport default Produtos","import React from 'react'\r\n\r\nconst Clientes = () => {\r\n   return <h1>hihihihihihi</h1>\r\n}\r\n\r\nexport default Clientes","import React from 'react'\r\n\r\nconst Servicos = () => {\r\n    return <h1>hihihihihihi</h1>\r\n}\r\n\r\nexport default Servicos","import styled from '@emotion/styled'\r\n\r\n\r\nexport const CountryContainer = styled.div`\r\nwidth: 80%;\r\nheight: 200px;\r\nmargin: 20px auto 0;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n`\r\n\r\nexport const CountryImage = styled.img`\r\nwidth: 50%;\r\nheight: 200px;\r\nbackground-image: ${props => props.img}\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position: center center;\r\n`\r\nexport const CountryDescription = styled.div`\r\nwidth: 45%;\r\n`\r\n","import React from 'react';\r\nimport * as s from \"./Country.Styles\";\r\n\r\nconst Country = props => {\r\n    const country = props.match.params.country;\r\n    const countries = {\r\n        vendas: {\r\n            img: '/img/countries/canada.png',\r\n            description: 'Canada is chilly'\r\n        },\r\n        inventario: {\r\n            img: '/img/countries/brazil.jpg',\r\n            description: 'Brazil is sunny'\r\n        },\r\n        tony: {\r\n            img: '/img/countries/australia.jpg',\r\n            description: 'Australia is boring'\r\n        },\r\n        ramos: {\r\n            img: '/img/countries/india.jpg',\r\n            description: 'India is awesome'\r\n        },\r\n        moldova: {\r\n            img: '/img/countries/moldova.jpeg',\r\n            description: 'Moldova is beautiful'\r\n        },\r\n        kenya: {\r\n            img: '/img/countries/kenya.jpg',\r\n            description: 'Kenya is breathtaking'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <s.CountryContainer>\r\n            <s.CountryImage img={countries[country]['img']} />\r\n            <s.CountryDescription>{countries[country]['description']}</s.CountryDescription>\r\n        </s.CountryContainer>\r\n    )\r\n}\r\n\r\nexport default Country","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './components/MainView/Home/Home'\r\nimport Produtos from './components/MainView/Produtos/Produtos'\r\nimport Clientes from './components/MainView/Clientes/Clientes'\r\nimport Servicos from './components/MainView/Servicos/Servicos'\r\nimport Country from './components/MainView/Clientes/Country/Country'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"./\" component={Home} />\r\n            <Route exact path=\"/produtos\" component={Produtos} />\r\n            <Route exact path=\"/clientes\" component={Clientes} />\r\n            <Route exact path=\"/clientes/:country\" component={Country} />\r\n            <Route exact path=\"/servicos\" component={Servicos} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes","import styled from '@emotion/styled'\r\n\r\n\r\nexport const ColorPickerContainer = styled.div`\r\nalign-self: flex-end;\r\nmargin-top: auto;\r\ndisplay: flex\r\n`\r\nexport const ColorBall = styled.div`\r\nwidth: 30px;\r\nheight: 30px;\r\nbackground-color: red;\r\nmargin: 50px;\r\nborder-radius: 50%;\r\n`\r\n","import * as c from './ColorPickerStyle'\r\n\r\n\r\nconst ColorPicker = (props) => {\r\n    return (\r\n        <c.ColorPickerContainer>\r\n            <c.ColorBall />\r\n        </c.ColorPickerContainer>\r\n    )\r\n}\r\nexport default ColorPicker","import React from 'react'\r\nimport * as s from './MainViewStyles'\r\nimport Routes from '../../routes'\r\nimport ColorPicker from './ColorPicker/ColorPicker'\r\n\r\nconst MainView = () => {\r\n    return (\r\n        <s.MainViewContainer>\r\n            <Routes />\r\n            <ColorPicker />\r\n        </s.MainViewContainer>\r\n    )\r\n}\r\nexport default MainView","export const dejaVu = {\n    bgColor1: 'rgba(252, 82, 150, 0.8)',\n    bgColor2: 'rgba(246, 112, 98, 0.8)',\n    fontColor: 'rgba(19, 15, 64)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(225, 112, 85)',\n    selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const swampy = {\n    bgColor1: 'rgba(11, 171, 100, 0.8)',\n    bgColor2: 'rgba(59, 183, 143, 0.8)',\n    fontColor: 'rgba(22, 46, 39)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(122, 204, 178)',\n    selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const pinkAndBlue = {\n    bgColor1: 'rgba(126, 232, 250, 0.8)',\n    bgColor2: 'rgba(238, 192, 198, 0.8)',\n    fontColor: 'rgba(150, 93, 105)',\n    fontColorSelected: 'rgba(33, 22, 24)',\n    dividerColor: 'rgba(232, 213, 216)',\n    selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const julyBlue = {\n    bgColor1: 'rgba(100, 125, 238, 0.8)',\n    bgColor2: 'rgba(127, 83, 172, 0.8)',\n    fontColor: 'rgba(19, 15, 64)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(169, 139, 199)',\n    selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const preDark = {\n    bgColor1: 'rgba(67, 67, 67, 0.8)',\n    bgColor2: 'rgba(0, 0, 0, 0.8)',\n    fontColor: 'rgba(161, 161, 161)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(48, 48, 48)',\n    selectedBackgroundCollapsedMode: 'light'\n}\n\nexport const brown = {\n    bgColor1: 'rgba(149, 59, 32, 0.8)',\n    bgColor2: 'rgba(87, 15, 10, 0.8)',\n    fontColor: 'rgba(240, 178, 175)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(120, 64, 61)',\n    selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const silver = {\n    bgColor1: 'rgba(91, 100, 103, 0.8)',\n    bgColor2: 'rgba(47, 67, 83, 0.8)',\n    fontColor: 'rgba(176, 176, 176)',\n    fontColorSelected: 'rgba(255, 255, 255)',\n    dividerColor: 'rgba(94, 104, 107)',\n    selectedBackgroundCollapsedMode: 'dark'\n}","import React from 'react'\nimport * as s from './App.Styles'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport MainView from './components/MainView/MainView'\nimport { BsFillAlarmFill, BsFillBootstrapFill, BsFillPeopleFill } from \"react-icons/bs\";\nimport * as Palette from './colors'\nconst App = () => {\n\n  const backgroundImage = 'img/2808.jpg'   /*converter para uma resolução menor antes do deploy*/\n  const sidebarHeader = {\n    fullName: \"name\",\n    shortName: \"open\"\n  }\n  const menuItems = [\n    { name: \"home\", to: '/', icon: <BsFillAlarmFill />, subMenuItems: [] },\n    {\n      name: \"clientes\", to: '/clientes', icon: <BsFillBootstrapFill />, subMenuItems: [\n        { name: \"vendas\", to: '/vendas' },\n        { name: \"inventário\", to: '/inventario'},\n        { name: \"tony\", to: '/inventario'},\n        { name: \"ramos\", to: '/inventario'},\n      ]\n    },\n    { name: \"produtos\", to: '/produtos', icon: <BsFillPeopleFill />, subMenuItems: [] },\n  ];\n  const fonts = {\n    header: 'Archivo Black',\n    menu: 'poppins'\n  }\n\n  return (\n    <s.App>\n      <Sidebar\n        backgroundImage={backgroundImage}\n        sidebarHeader={sidebarHeader}\n        menuItems={menuItems}\n        fonts={fonts}\n        colorPalette = {Palette.silver}\n      />\n      <MainView /*pickup-a color*//>\n    </s.App>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './Global.scss';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}